{
    "StartAt": "Which type of order event?",
    "States": {
        "Which type of order event?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.detail.type",
                    "StringEquals": "order-added",
                    "Next": "AddOrderAddedTimeStamp"
                },
                {
                    "Variable": "$.detail.type",
                    "StringEquals": "order-started",
                    "Next": "AddOrderStartedTimeStamp"
                },
                {
                    "Variable": "$.detail.type",
                    "StringEquals": "order-completed",
                    "Next": "AddOrderCompletedTimeStamp"
                }
            ]
        },
        "AddOrderAddedTimeStamp": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
                "TableName": "CoffeeCore${stage}",
                "Item": {
                    "PK": {
                        "S.$": "States.Format('{}_{}', $.detail.storeId, $.detail.id)"
                    },
                    "SK": {
                        "S": "added"
                    },
                    "time": {
                        "S.$": "$.detail.time"
                    }
                }
            },
            "End": true
        },
        "AddOrderStartedTimeStamp": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
                "TableName": "CoffeeCore${stage}",
                "Item": {
                    "PK": {
                        "S.$": "States.Format('{}_{}', $.detail.storeId, $.detail.id)"
                    },
                    "SK": {
                        "S": "started"
                    },
                    "time": {
                        "S.$": "$.detail.time"
                    }
                }
            },
            "End": true
        },
        "AddOrderCompletedTimeStamp": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:putItem",
            "Parameters": {
                "TableName": "CoffeeCore${stage}",
                "Item": {
                    "PK": {
                        "S.$": "States.Format('{}_{}', $.detail.storeId, $.detail.id)"
                    },
                    "SK": {
                        "S": "completed"
                    },
                    "time": {
                        "S.$": "$.detail.time"
                    }
                }
            },
            "ResultPath": null,
            "Next": "List all order status updates"
        },
        "List all order status updates": {
            "Type": "Task",
            "Parameters": {
                "TableName": "CoffeeCore${stage}",
                "KeyConditionExpression": "PK = :PK AND begins_with(SK, :SK)",
                "ExpressionAttributeValues": {
                    ":PK": {
                        "S.$": "States.Format('{}_{}', $.detail.storeId, $.detail.id)"
                    },
                    ":SK": {
                        "S": "added"
                    }
                }
            },
            "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
            "Next": "DetermineCustomerWaitTime"
        },
        "DetermineCustomerWaitTime": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:{@region}:{@accountId}:function:coffeecoretests-makePaymentTest-{@stage}:$LATEST"
            },
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 6,
                    "BackoffRate": 2
                }
            ],
            "End": true
        }
    }
}
